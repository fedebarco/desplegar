---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import ProductCard from '../components/ProductCard.astro';
import { products } from '../data/products';

// Get unique categories
const categories = [...new Set(products.map(product => product.category))];
---

<Layout title="Productos - TechStore">
  <Header />
  
  <main>
    <!-- Page Header -->
    <section class="bg-white py-12 border-b">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-4xl font-bold text-gray-900 mb-4">
            Nuestros Productos
          </h1>
          <p class="text-xl text-gray-600">
            Explora nuestra amplia gama de productos tecnológicos
          </p>
        </div>
      </div>
    </section>

    <!-- Filters -->
    <section class="bg-gray-50 py-6">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex flex-wrap gap-4 justify-center">
          <button class="filter-btn active bg-primary-600 text-white px-6 py-2 rounded-full font-medium transition-colors hover:bg-primary-700" data-category="all">
            Todos
          </button>
          {categories.map((category) => (
            <button class="filter-btn bg-white text-gray-700 border border-gray-300 px-6 py-2 rounded-full font-medium transition-colors hover:bg-gray-100" data-category={category}>
              {category}
            </button>
          ))}
        </div>
      </div>
    </section>

    <!-- Products Grid -->
    <section class="py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div id="products-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {products.map((product) => (
            <div class="product-item" data-category={product.category}>
              <ProductCard product={product} />
            </div>
          ))}
        </div>
        
        <!-- No products message (hidden by default) -->
        <div id="no-products" class="text-center py-12 hidden">
          <div class="text-gray-400">
            <svg class="w-16 h-16 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0012 15c-2.34 0-4.5-.674-6.364-1.834l-.636.636a9 9 0 1113 0l-.636-.636A7.962 7.962 0 0012 15zM12 9a1 1 0 100-2 1 1 0 000 2z"></path>
            </svg>
            <h3 class="text-xl font-semibold text-gray-500 mb-2">No se encontraron productos</h3>
            <p class="text-gray-400">Intenta con otra categoría</p>
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- Footer -->
  <footer class="bg-gray-900 text-white py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <h3 class="text-2xl font-bold mb-4">TechStore</h3>
        <p class="text-gray-300">
          Tu tienda de tecnología de confianza. Los mejores productos al mejor precio.
        </p>
        <div class="mt-8">
          <p class="text-gray-400">&copy; 2024 TechStore. Todos los derechos reservados.</p>
        </div>
      </div>
    </div>
  </footer>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const productItems = document.querySelectorAll('.product-item');
    const noProductsMessage = document.getElementById('no-products');

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-primary-600', 'text-white');
          btn.classList.add('bg-white', 'text-gray-700', 'border', 'border-gray-300');
        });
        
        button.classList.add('active', 'bg-primary-600', 'text-white');
        button.classList.remove('bg-white', 'text-gray-700', 'border', 'border-gray-300');
        
        // Filter products
        let visibleProducts = 0;
        
        productItems.forEach(item => {
          const itemCategory = item.getAttribute('data-category');
          
          if (category === 'all' || itemCategory === category) {
            item.style.display = 'block';
            visibleProducts++;
          } else {
            item.style.display = 'none';
          }
        });
        
        // Show/hide no products message
        if (visibleProducts === 0) {
          noProductsMessage?.classList.remove('hidden');
        } else {
          noProductsMessage?.classList.add('hidden');
        }
      });
    });
  });
</script> 